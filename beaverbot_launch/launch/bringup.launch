<launch>
    <arg name="simulation" default="true" />
    <arg name="coverage_length" default="4"/>
    <arg name="coverage_width" default="6"/>
    <arg name="coverage_iteration" default="2"/>
    <arg name="rvizconfig" default="$(find beaverbot_description)/rviz/urdf.rviz"/>
    <arg name="model" default="$(find beaverbot_description)/urdf/beaverbot.urdf.xacro"/>

    <param name="robot_description" command="$(find xacro)/xacro $(arg model)"/>
   
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
            respawn="false" output="screen" />

    <group if = "$(arg simulation)">
        <include file="$(find beaverbot_launch)/launch/beaverbot_gazebo.launch">
        </include>

        <node name="beaverbot_pose_node" pkg="beaverbot_pose" type="beaverbot_pose_node" output="screen" required="true" >
          <param name="~log" value="false"/>
          <param name="~log_folder" value="$(find beaverbot_pose)/log_data"/>
          <param name="~publish_rate" value="0.1"/>
          <param name="~rotation_angle" value="-90"/>
          <param name="~gps_to_rear_axis" value="0.6"/>
          <param name="~imu_offset" value="0.05"/>
        </node>
    </group>
    <group unless = "$(arg simulation)">
        <include file="$(find beaverbot_launch)/launch/sensors.launch">
        </include>

        <node name="beaverbot_pose_node" pkg="beaverbot_pose" type="beaverbot_pose_node" output="screen" required="true" >
          <param name="~log" value="false"/>
          <param name="~log_folder" value="$(find beaverbot_pose)/log_data"/>
          <param name="~publish_rate" value="0.1"/>
          <param name="~rotation_angle" value="-90"/>
          <param name="~gps_to_rear_axis" value="0.0"/>
          <param name="~imu_offset" value="-0.18981711362095213"/>
        </node>
    </group>

    <node name="generate_trajectory_node" pkg="trajectory_generation" type="generate_trajectory" required="true" output="screen">
      <param name="~iteration" value="${arg coverage_iteration}"/>
      <param name="~length" value="${arg coverage_length}"/>
      <param name="~width" value="${arg coverage_width}"/>
    </node>

    <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="laser_filter">
        <rosparam command="load" file="$(find obstacle_detection)/my_laser_config.yaml" />
    </node>

    <node name="obstacle_detection_node" pkg="obstacle_detection" type="obstacle_detection_node" required="true"/>  

    <node name="map_server" pkg="map_server" type="map_server" args="$(find beaverbot_launch)/maps/dummy_map.yml" />

    <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)"/>
</launch>
